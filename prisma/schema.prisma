generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model EmailChange {
  token      String   @id @db.Char(21)
  newEmail   String
  userId     String      @unique @db.Uuid
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  validUntil DateTime @default(dbgenerated("(timezone('utc'::text, now()) + '2 days'::interval)")) @db.Timestamp(6)

  @@map("email-change")
}

model PasswordReset {
  token      String   @id @db.Char(21)
  userId     String      @unique @db.Uuid
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  validUntil DateTime @default(dbgenerated("(timezone('utc'::text, now()) + '2 days'::interval)")) @db.Timestamp(6)

  @@map("password-reset")
}

enum Role {
  ADMIN
  USER
}

model User {
  id String @id @default(uuid()) @db.Uuid
  email             String             @unique
  passwordHash      String
  fullName         String
  imageUrl             String?
  registrationDate  DateTime           @default(dbgenerated("timezone('UTC'::text, now())")) @db.Timestamp(6)
  emailChange       EmailChange?
  passwordReset     PasswordReset?
  role      Role     @default(USER)

  @@map("user")
}
